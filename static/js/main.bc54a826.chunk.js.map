{"version":3,"sources":["svgs/cross.js","svgs/circle.js","Grid.js","Playerinfo.js","App.js","index.js","grid.module.css"],"names":["Cross","props","size","width","height","viewBox","fill","xmlns","filter","d","stroke","strokeWidth","strokeLinecap","id","x","y","filterUnits","colorInterpolationFilters","floodOpacity","result","in","type","values","dy","stdDeviation","in2","operator","mode","Circle","cx","cy","r","Grid","divisions","positions","map","value","index","onClick","setPositions","svg","className","styles","container","PlayerInfo","winner","turn","App","React","useState","name","undefined","indexes","Array","data","setdata","winnngIndexes","prevData","forEach","line","a","b","c","btn","window","location","reload","ReactDom","render","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.bc54a826.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nexport default function Cross(props){\r\n    const size = props.size || 100;\r\n\r\n    return(\r\n        <svg width={size} height={size} viewBox=\"0 0 193 157\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n<g filter=\"url(#filter0_d_3_5)\">\r\n<path d=\"M16 5L165 144M9 144L184 5\" stroke=\"black\" strokeWidth=\"10\" strokeLinecap=\"round\"/>\r\n</g>\r\n<defs>\r\n<filter id=\"filter0_d_3_5\" x=\"-0.000198364\" y=\"-0.000198364\" width=\"193\" height=\"157\" filterUnits=\"userSpaceOnUse\" colorInterpolationFilters=\"sRGB\">\r\n<feFlood floodOpacity=\"0\" result=\"BackgroundImageFix\"/>\r\n<feColorMatrix in=\"SourceAlpha\" type=\"matrix\" values=\"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0\" result=\"hardAlpha\"/>\r\n<feOffset dy=\"4\"/>\r\n<feGaussianBlur stdDeviation=\"2\"/>\r\n<feComposite in2=\"hardAlpha\" operator=\"out\"/>\r\n<feColorMatrix type=\"matrix\" values=\"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.25 0\"/>\r\n<feBlend mode=\"normal\" in2=\"BackgroundImageFix\" result=\"effect1_dropShadow_3_5\"/>\r\n<feBlend mode=\"normal\" in=\"SourceGraphic\" in2=\"effect1_dropShadow_3_5\" result=\"shape\"/>\r\n</filter>\r\n</defs>\r\n</svg>\r\n\r\n    );\r\n}","import React from \"react\";\r\n\r\nexport default function Circle(props){\r\n    const size = props.size || 100;\r\n    return(\r\n        <svg width={size} height={size} viewBox=\"0 0 100 100\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n            <circle cx=\"50\" cy=\"50\" r=\"45\" stroke=\"black\" strokeWidth=\"10\"/>\r\n        </svg>\r\n\r\n    );\r\n}","import React from \"react\";\r\nimport styles from './grid.module.css'\r\nimport Cross from \"./svgs/cross\";\r\nimport Circle  from \"./svgs/circle\";\r\n\r\n\r\n\r\nconst renderSvg= svg => {\r\n    if (svg == 'cross'){\r\n        return <Cross size={40}/>\r\n    } else if (svg == 'circle'){\r\n        return <Circle size={40}/>\r\n    }else{\r\n        return null;\r\n    }\r\n}\r\n\r\nexport default function Grid(props){\r\n    const divisions = props.positions.map((value, index) =>{\r\n      // const isWinningIndex =props.winningIndexes.includes(index)\r\n        return (\r\n            <div \r\n              //  className = {isWinningIndex ? styles.winner : null}\r\n                key = {index}\r\n                onClick = {() => {\r\n                props. setPositions(index)\r\n            }} >\r\n                {renderSvg(value)}\r\n            </div>\r\n        );\r\n    })\r\n    return(\r\n        <div className ={styles.container }>\r\n       {divisions}   \r\n        </div>\r\n    );\r\n}","import React from \"react\";\r\n\r\nexport default function PlayerInfo(props){\r\n    const element = props.winner ? <h1>winner: {props.winner}</h1> :<h5>{props.turn}</h5> \r\n    return element\r\n}","import React from \"react\";\r\nimport Grid from './Grid';\r\nimport PlayerInfo from \"./Playerinfo\";\r\nimport styles from './grid.module.css'\r\n\r\n\r\n\r\n\r\nexport default function App(props){\r\n      <div>\r\n       \r\n      </div>\r\n\r\n       const [data, setdata] = React.useState({\r\n              winner:{\r\n              name: undefined,\r\n              indexes:[]},\r\n              turn:'cross',\r\n              positions: Array(9).fill(null)\r\n       })\r\n       const refreshPage =() =>{\r\n              window.location.reload();\r\n       }\r\n\r\n       return (\r\n              <>\r\n              \r\n              <Grid \r\n              winnngIndexes ={data.winner.indexes}\r\n              positions = {data.positions}\r\n              setPositions = {index =>{\r\n                     setdata(prevData =>{\r\n                            if(!prevData.positions[index] && !prevData.winner.name){\r\n                            const data ={...prevData}\r\n                            data.positions[index] = data.turn\r\n                            const lines= [\r\n                                   [0, 1, 2],\r\n                                   [3, 4, 5],\r\n                                   [6, 7, 8],\r\n                                   [0, 3, 6],\r\n                                   [1, 4, 7],\r\n                                   [2, 5, 8],\r\n                                   [0, 4, 8],\r\n                                   [2, 4, 6]\r\n                            ]\r\n                            lines.forEach(line => {\r\n                                   const [a, b, c] = line\r\n                                   if(data.positions[a] && \r\n                                          data.positions[a]=== data.positions[b] &&\r\n                                          data.positions[a]=== data.positions[c]){\r\n                                                 data.winner.name = data.turn\r\n                                                 data.winner.indexes=line;\r\n                                          }\r\n                                  \r\n                            })\r\n                            data.turn=(data.turn==='cross')? 'circle' :'cross'\r\n                            return data\r\n                            }else{\r\n                                   return prevData;\r\n                            }\r\n                     })\r\n              }}\r\n              />\r\n              \r\n              <div className={styles.btn}>\r\n              <PlayerInfo winner={data.winner.name} />\r\n              \r\n              <button id='click' onClick={refreshPage}>Play Again</button>\r\n              </div>\r\n              </>\r\n              );\r\n}","import React from \"react\";\r\nimport ReactDom from \"react-dom\";\r\nimport App from './App';\r\n\r\nReactDom.render(<App/>, document.getElementById('root'))\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"grid_container__2zapF\",\"btn\":\"grid_btn__3xhbW\"};"],"sourceRoot":""}